// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-axios';
import type { ListModelsError, ListModelsResponse, CreateModelData, CreateModelError, CreateModelResponse, ListBackgroundsError, ListBackgroundsResponse, CreateBackgroundData, CreateBackgroundError, CreateBackgroundResponse, ListPosesError, ListPosesResponse, CreatePoseData, CreatePoseError, CreatePoseResponse, ListProductsError, ListProductsResponse, CreateProductData, CreateProductError, CreateProductResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * List Models
 */
export const listModels = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListModelsResponse, ListModelsError, ThrowOnError>({
        ...options,
        url: '/models'
    });
};

/**
 * Create Model
 */
export const createModel = <ThrowOnError extends boolean = false>(options: Options<CreateModelData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateModelResponse, CreateModelError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/models'
    });
};

/**
 * List Backgrounds
 */
export const listBackgrounds = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListBackgroundsResponse, ListBackgroundsError, ThrowOnError>({
        ...options,
        url: '/backgrounds'
    });
};

/**
 * Create Background
 */
export const createBackground = <ThrowOnError extends boolean = false>(options: Options<CreateBackgroundData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateBackgroundResponse, CreateBackgroundError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/backgrounds'
    });
};

/**
 * List Poses
 */
export const listPoses = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListPosesResponse, ListPosesError, ThrowOnError>({
        ...options,
        url: '/poses'
    });
};

/**
 * Create Pose
 */
export const createPose = <ThrowOnError extends boolean = false>(options: Options<CreatePoseData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreatePoseResponse, CreatePoseError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/poses'
    });
};

/**
 * List Products
 */
export const listProducts = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<ListProductsResponse, ListProductsError, ThrowOnError>({
        ...options,
        url: '/products'
    });
};

/**
 * Create Product
 */
export const createProduct = <ThrowOnError extends boolean = false>(options: Options<CreateProductData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateProductResponse, CreateProductError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/products'
    });
};